basePath: /
definitions:
  handler.MetaData:
    properties:
      limit:
        type: integer
      offset:
        type: integer
      total:
        type: integer
    type: object
  handler.PaginatedResponse:
    properties:
      data: {}
      meta:
        $ref: '#/definitions/handler.MetaData'
      success:
        type: boolean
    type: object
  handler.Response:
    properties:
      data: {}
      error:
        type: string
      message:
        type: string
      success:
        type: boolean
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for managing stock data from external sources
  title: Stock API
  version: "1.0"
paths:
  /api/v1/recommendations:
    get:
      consumes:
      - application/json
      description: Analyzes stock data and returns the best investment recommendations
        based on ratings, actions, target prices, and recency
      parameters:
      - default: 10
        description: Number of recommendations to return
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Get stock recommendations
      tags:
      - stocks
  /api/v1/stock/{ticker}:
    get:
      consumes:
      - application/json
      description: Retrieves all stock records for a given ticker symbol, ordered
        by time (newest first)
      parameters:
      - description: Stock ticker symbol (e.g., AAPL, GOOGL)
        in: path
        name: ticker
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Get all historical versions of a stock by ticker
      tags:
      - stocks
  /api/v1/stocks:
    get:
      consumes:
      - application/json
      description: Retrieves stocks with optional filtering and pagination
      parameters:
      - description: Filter by ticker
        in: query
        name: ticker
        type: string
      - description: Filter by company name (partial match)
        in: query
        name: company
        type: string
      - description: Filter by brokerage name (partial match)
        in: query
        name: brokerage
        type: string
      - description: Filter by action
        in: query
        name: action
        type: string
      - description: Filter by rating_from
        in: query
        name: rating_from
        type: string
      - description: Filter by rating_to
        in: query
        name: rating_to
        type: string
      - default: time
        description: Sort by field (ticker, company, time, rating_to, action)
        in: query
        name: sortBy
        type: string
      - default: desc
        description: Sort order (asc, desc)
        in: query
        name: sortOrder
        type: string
      - default: 50
        description: Number of items per page
        in: query
        name: limit
        type: integer
      - default: 0
        description: Number of items to skip
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.PaginatedResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Get stocks
      tags:
      - stocks
  /api/v1/stocks/{id}:
    get:
      consumes:
      - application/json
      description: Retrieves a single stock by its ID
      parameters:
      - description: Stock ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Get stock by ID
      tags:
      - stocks
  /api/v1/stocks/sync:
    post:
      consumes:
      - application/json
      description: Fetches all stocks from the external API and stores them in the
        database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Sync stocks from external API
      tags:
      - stocks
  /health:
    get:
      consumes:
      - application/json
      description: Check if the API is healthy
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Health check
      tags:
      - system
swagger: "2.0"
